name: build x86_64-pc-windows-msvc
on: [push]
env:
   PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/etc/eselect/wine/bin
jobs:
  x86_64-pc-windows-msvc:
    runs-on: msvc-wine
    steps:
      - run: echo "SHORT_SHA=`echo ${{ github.sha }} | cut -c1-8`" >> $GITHUB_ENV
      - run: git clone ${{ github.server_url }}/${{ github.repository }} ${SHORT_SHA}
      - run: cd ${SHORT_SHA} && git checkout ${{ github.sha }}
      - run: mkdir nlohmann-json && cd nlohmann-json && wget -qO- https://www.burntcomma.com/packages/nlohmann-json-3.11.3-x86_64-pc-windows-msvc.tar.gz | tar -xz
      - run: mkdir libgit2 && cd libgit2 && wget -qO- https://www.burntcomma.com/libgit2-1.1.0-x86_64-pc-windows-msvc.tar.gz | tar -xz
      - run: mkdir zlib && cd zlib && wget -qO- https://www.burntcomma.com/packages/zlib-1.3.1-x86_64-pc-windows-msvc.tar.gz | tar -xz
      - run: |
          cmake -DCMAKE_TOOLCHAIN_FILE=msvc-amd64.cmake \
            -DCMAKE_FIND_ROOT_PATH=${PWD}/nlohmann-json \
            -DCMAKE_PREFIX_PATH="${PWD}/libgit2/debug" \
            -DLIBGIT2_INCLUDE_DIRS="${PWD}/libgit2/include" \
            -DCMAKE_INSTALL_PREFIX=${PWD}/install/debug \
            -DCMAKE_BUILD_TYPE=Debug \
            -S ${SHORT_SHA} -B debug-work && \
          cmake --build debug-work --parallel `nproc` && \
          cmake --install debug-work
      - run: |
          cmake -DCMAKE_TOOLCHAIN_FILE=msvc-amd64.cmake \
            -DCMAKE_FIND_ROOT_PATH=${PWD}/nlohmann-json \
            -DCMAKE_PREFIX_PATH="${PWD}/libgit2" \
            -DLIBGIT2_INCLUDE_DIRS="${PWD}/libgit2/include" \
            -DCMAKE_INSTALL_PREFIX=${PWD}/install \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -S ${SHORT_SHA} -B release-work && \
          cmake --build release-work --parallel `nproc` && \
          cmake --install release-work
      - run: cp libgit2/debug/bin/libgit2.dll libgit2/bin/pcre.dll zlib/debug/bin/zlibd1.dll install/debug/bin/
      - run: cp libgit2/bin/libgit2.dll libgit2/bin/pcre.dll zlib/bin/zlib1.dll install/bin/
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          overwrite: true
          path: |
            install
